{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\react-navbar\\\\src\\\\Navbar.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Link, useMatch, useResolvedPath } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Navbar() {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  function handleClick() {\n    setIsOpen(!isOpen);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"nav\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"site-title\",\n      children: \"HealthyGram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/dashboard\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/recordList\",\n        children: \"Records list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/about\",\n        children: \"Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/about\",\n        children: \"Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/about\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/about\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"#\",\n        onClick: handleClick,\n        children: \"Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: props.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.link,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Navbar, \"wI4RD8C1tVsUvnhO13IbxY3XhiQ=\");\n\n_c = Navbar;\n\nfunction CustomLink(_ref) {\n  _s2();\n\n  let {\n    to,\n    children,\n    ...props\n  } = _ref;\n  const resolvedPath = useResolvedPath(to);\n  const isActive = useMatch({\n    path: resolvedPath.pathname,\n    end: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: isActive ? \"active\" : \"\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: to,\n      ...props,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CustomLink, \"Dfq6KH74NsOUUXPzETtO7DGllew=\", false, function () {\n  return [useResolvedPath, useMatch];\n});\n\n_c2 = CustomLink;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"CustomLink\");","map":{"version":3,"sources":["D:/Projects/react-navbar/src/Navbar.js"],"names":["Link","useMatch","useResolvedPath","React","useState","Navbar","isOpen","setIsOpen","handleClick","props","items","map","item","index","link","title","CustomLink","to","children","resolvedPath","isActive","path","pathname","end"],"mappings":";;;;AAAA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,MAAT,GACf;AAAA;;AAEE,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBH,QAAQ,CAAE,KAAF,CAAtC;;AAEA,WAASI,WAAT,GACA;AACED,IAAAA,SAAS,CAAE,CAACD,MAAH,CAAT;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,GAAf;AAAmB,QAAA,OAAO,EAAGE,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,EAUJF,MAAM,iBACJ;AAAA,kBACIG,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAiB,CAAEC,IAAF,EAAQC,KAAR,kBACjB;AAAA,iCACE;AAAG,YAAA,IAAI,EAAGD,IAAI,CAACE,IAAf;AAAA,sBAAwBF,IAAI,CAACG;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF,WAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,gBADA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXE;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAtCuBR,M;;KAAAA,M;;AAwCxB,SAASW,UAAT,OACA;AAAA;;AAAA,MADsB;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,QAAN;AAAgB,OAAGT;AAAnB,GACtB;AACE,QAAMU,YAAY,GAAGjB,eAAe,CAAEe,EAAF,CAApC;AACA,QAAMG,QAAQ,GAAGnB,QAAQ,CAAE;AAAEoB,IAAAA,IAAI,EAAEF,YAAY,CAACG,QAArB;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GAAF,CAAzB;AAEA,sBACE;AAAI,IAAA,SAAS,EAAGH,QAAQ,GAAG,QAAH,GAAc,EAAtC;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAGH,EAAX;AAAA,SAAqBR,KAArB;AAAA,gBACIS;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;IAZQF,U;UAEcd,e,EACJD,Q;;;MAHVe,U","sourcesContent":["import { Link, useMatch, useResolvedPath } from \"react-router-dom\"\r\nimport React, { useState } from 'react';\r\n\r\nexport default function Navbar ()\r\n{\r\n\r\n  const [ isOpen, setIsOpen ] = useState( false );\r\n\r\n  function handleClick ()\r\n  {\r\n    setIsOpen( !isOpen );\r\n  }\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <Link to=\"/\" className=\"site-title\">\r\n        HealthyGram\r\n      </Link>\r\n      <ul>\r\n        <CustomLink to=\"/\">Home</CustomLink>\r\n        <CustomLink to=\"/dashboard\">Dashboard</CustomLink>\r\n        <CustomLink to=\"/recordList\">Records list</CustomLink>\r\n        <CustomLink to=\"/about\">Doctor</CustomLink>\r\n        <CustomLink to=\"/about\">Patient</CustomLink>\r\n        <CustomLink to=\"/about\">Register</CustomLink>\r\n        <CustomLink to=\"/about\">Register</CustomLink>\r\n        <CustomLink to=\"#\" onClick={ handleClick }>Doctor</CustomLink>\r\n{\r\n  isOpen && (\r\n    <ul>\r\n      { props.items.map( ( item, index ) => (\r\n        <li key={ index }>\r\n          <a href={ item.link }>{ item.title }</a>\r\n        </li>\r\n      ) ) }\r\n    </ul>\r\n  )\r\n}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nfunction CustomLink ( { to, children, ...props } )\r\n{\r\n  const resolvedPath = useResolvedPath( to )\r\n  const isActive = useMatch( { path: resolvedPath.pathname, end: true } )\r\n\r\n  return (\r\n    <li className={ isActive ? \"active\" : \"\" }>\r\n      <Link to={ to } { ...props }>\r\n        { children }\r\n      </Link>\r\n    </li>\r\n  )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}