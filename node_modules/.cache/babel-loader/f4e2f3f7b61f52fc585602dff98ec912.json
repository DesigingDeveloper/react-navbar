{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\react-navbar\\\\src\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport { Link, useMatch, useResolvedPath } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Navbar() {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"nav\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"site-title\",\n      children: \"HealthyGram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/dashboard\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/recordList\",\n        children: \"Records list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/about\",\n        children: \"Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/about\",\n        children: \"Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/about\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/about\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Navbar;\n\nfunction CustomLink(_ref) {\n  _s();\n\n  let {\n    to,\n    children,\n    ...props\n  } = _ref;\n  const resolvedPath = useResolvedPath(to);\n  const isActive = useMatch({\n    path: resolvedPath.pathname,\n    end: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: isActive ? \"active\" : \"\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: to,\n      ...props,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomLink, \"Dfq6KH74NsOUUXPzETtO7DGllew=\", false, function () {\n  return [useResolvedPath, useMatch];\n});\n\n_c2 = CustomLink;\n\n/*#__PURE__*/\n_jsxDEV(\"a\", {\n  href: \"#\",\n  onClick: handleClick,\n  children: props.title\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 1\n}, this);\n\n{\n  isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: item.link,\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"CustomLink\");","map":{"version":3,"sources":["D:/Projects/react-navbar/src/Navbar.js"],"names":["Link","useMatch","useResolvedPath","Navbar","CustomLink","to","children","props","resolvedPath","isActive","path","pathname","end","handleClick","title","isOpen","items","map","item","index","link"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,eAAzB,QAAgD,kBAAhD;;AAEA,eAAe,SAASC,MAAT,GACf;AACE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;KAlBuBA,M;;AAoBxB,SAASC,UAAT,OACA;AAAA;;AAAA,MADsB;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,QAAN;AAAgB,OAAGC;AAAnB,GACtB;AACE,QAAMC,YAAY,GAAGN,eAAe,CAAEG,EAAF,CAApC;AACA,QAAMI,QAAQ,GAAGR,QAAQ,CAAE;AAAES,IAAAA,IAAI,EAAEF,YAAY,CAACG,QAArB;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GAAF,CAAzB;AAEA,sBACE;AAAI,IAAA,SAAS,EAAGH,QAAQ,GAAG,QAAH,GAAc,EAAtC;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAGJ,EAAX;AAAA,SAAqBE,KAArB;AAAA,gBACID;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAZQF,U;UAEcF,e,EACJD,Q;;;MAHVG,U;;AAeT;AAAA;AAAG,EAAA,IAAI,EAAC,GAAR;AAAY,EAAA,OAAO,EAAES,WAArB;AAAA,YAAmCN,KAAK,CAACO;AAAzC;AAAA;AAAA;AAAA;AAAA;;AACA;AAACC,EAAAA,MAAM,iBACL;AAAA,cACGR,KAAK,CAACS,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBACf;AAAA,6BACE;AAAG,QAAA,IAAI,EAAED,IAAI,CAACE,IAAd;AAAA,kBAAqBF,IAAI,CAACJ;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF,OAASK,KAAT;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADD;AAQC","sourcesContent":["import { Link, useMatch, useResolvedPath } from \"react-router-dom\"\r\n\r\nexport default function Navbar ()\r\n{\r\n  return (\r\n    <nav className=\"nav\">\r\n      <Link to=\"/\" className=\"site-title\">\r\n        HealthyGram\r\n      </Link>\r\n      <ul>\r\n        <CustomLink to=\"/\">Home</CustomLink>\r\n        <CustomLink to=\"/dashboard\">Dashboard</CustomLink>\r\n        <CustomLink to=\"/recordList\">Records list</CustomLink>\r\n        <CustomLink to=\"/about\">Doctor</CustomLink>\r\n        <CustomLink to=\"/about\">Patient</CustomLink>\r\n        <CustomLink to=\"/about\">Register</CustomLink>\r\n        <CustomLink to=\"/about\">Register</CustomLink>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nfunction CustomLink ( { to, children, ...props } )\r\n{\r\n  const resolvedPath = useResolvedPath( to )\r\n  const isActive = useMatch( { path: resolvedPath.pathname, end: true } )\r\n\r\n  return (\r\n    <li className={ isActive ? \"active\" : \"\" }>\r\n      <Link to={ to } { ...props }>\r\n        { children }\r\n      </Link>\r\n    </li>\r\n  )\r\n}\r\n\r\n\r\n<a href=\"#\" onClick={handleClick}>{props.title}</a>\r\n{isOpen && (\r\n  <ul>\r\n    {props.items.map((item, index) => (\r\n      <li key={index}>\r\n        <a href={item.link}>{item.title}</a>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n)}"]},"metadata":{},"sourceType":"module"}